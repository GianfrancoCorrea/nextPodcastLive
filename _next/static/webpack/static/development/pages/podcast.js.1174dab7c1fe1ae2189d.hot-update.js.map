{"version":3,"file":"static/webpack/static/development/pages/podcast.js.1174dab7c1fe1ae2189d.hot-update.js","sources":["webpack:///./pages/podcast.jsx"],"sourcesContent":["import React from 'react';\nimport 'isomorphic-fetch';\nimport Link from 'next/link';\nimport Error from './_error';\nimport PropTypes from 'prop-types';\n\nexport default class Podcast extends React.Component {\n    static async getInitialProps({ query, res }) {\n        try {\n            const podcastID = query.id;\n            const requestAudio = await fetch(`https://api.audioboom.com/audio_clips/${podcastID}.mp3`);\n            if (requestAudio.status >= 404) {\n                res.statusCode = requestAudio.status;\n                return {\n                    channel: null, series: null, audioClips: null, statusCode: 404,\n                };\n            }\n\n            const dataAudio = await requestAudio.json();\n            const audio = dataAudio.body.audio_clip;\n            const { statusCode } = res;\n\n            return { audio, statusCode };\n        } catch (e) {\n            return { audio: null, statusCode: 503 };\n        }\n    }\n\n    render() {\n        const { audio, statusCode } = this.props;\n\n        if (statusCode !== 200) {\n            return <Error statusCode={statusCode} />;\n        }\n\n        return (\n            <div>\n                <header>Podcasts</header>\n\n                <div className=\"modal\">\n                    <div className=\"clip\">\n                        <nav>\n                            <Link href={`/channel?id=${audio.channel.id}`}>\n                                <a className=\"close\"><b>&lt; Back</b></a>\n                            </Link>\n                        </nav>\n\n                        <picture>\n                            <div style={{ backgroundImage: `url(${audio.urls.image || audio.channel.urls.logo_image.original})` }} />\n                        </picture>\n                        <div className=\"player\">\n                            <h3>{audio.title}</h3>\n                            <h6>{audio.channel.title}</h6>\n                            <audio controls autoPlay>\n                                <source src={audio.urls.high_mp3} type=\"audio/mpeg\" />\n                            </audio>\n                        </div>\n                    </div>\n\n                    <style jsx>\n                        {`\n                nav {\n                background: none;\n                }\n                nav a {\n                display: inline-block;\n                padding: 15px;\n                color: white;\n                cursor: pointer;\n                text-decoration: none;\n                }\n                .clip {\n                display: flex;\n                height: 100%;\n                flex-direction: column;\n                background: #8756ca;\n                color: white;\n                }\n                picture {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                flex: 1 1;\n                flex-direction: column;\n                width: auto;\n                padding: 10%;\n                }\n                picture div {\n                width: 100%;\n                height: 100%;\n                background-position: 50% 50%;\n                background-size: contain;\n                background-repeat: no-repeat;\n                }\n                .player {\n                padding: 30px;\n                background: rgba(0,0,0,0.3);\n                text-align: center;\n                }\n                h3 {\n                margin: 0;\n                }\n                h6 {\n                margin: 0;\n                margin-top: 1em;\n                }\n                audio {\n                margin-top: 2em;\n                width: 100%;\n                }\n\n                .modal {\n                position: fixed;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                z-index: 99999;\n                }\n            `}\n\n                    </style>\n\n                    <style jsx global>\n                        {`\n                body {\n                margin: 0;\n                font-family: system-ui;\n                background: white;\n                }\n            `}\n\n                    </style>\n                </div>\n            </div>\n        );\n    }\n}\n\nPodcast.propTypes = {\n    audio: PropTypes.shape({\n        channel: PropTypes.shape({\n            id: PropTypes.number,\n            title: PropTypes.string,\n            urls: PropTypes.shape({\n                logo_image: PropTypes.shape({\n                    original: PropTypes.string,\n                }),\n                image: PropTypes.string,\n            }),\n        }),\n\n    }).isRequired,\n    minimized: PropTypes.bool,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAsBA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiGA;;;;;;;;;;;;AAjIA;;AAEA;;AACA;AACA;;AADA;AACA;AAAA;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AACA;;;AAIA;AACA;;AADA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;;;;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAnBA;AACA;AADA;AAqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAHA;AADA;AAaA;AAdA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}